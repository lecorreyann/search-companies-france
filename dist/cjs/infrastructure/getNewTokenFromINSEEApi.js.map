{
  "version": 3,
  "sources": ["../../esm/infrastructure/getNewTokenFromINSEEApi.js"],
  "sourcesContent": ["import fetch from \"node-fetch\";\nexport const getNewTokenFromINSEEApi = async () => {\n    if (!process.env.INSEE_API_CONSUMER_KEY)\n        throw new Error(\"INSEE_API_CONSUMER_KEY is not defined on .env\");\n    if (!process.env.INSEE_API_CONSUMER_SECRET)\n        throw new Error(\"INSEE_API_CONSUMER_SECRET is not defined on .env\");\n    const encodedAuthorization = Buffer.from(`${process.env.INSEE_API_CONSUMER_KEY}:${process.env.INSEE_API_CONSUMER_SECRET}`).toString(\"base64\");\n    const response = await fetch(`https://api.insee.fr/token`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            Authorization: `Basic ${encodedAuthorization}`,\n        },\n        body: \"grant_type=client_credentials\",\n    });\n    return response;\n};\nexport default getNewTokenFromINSEEApi;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB;AACX,MAAM,0BAA0B,YAAY;AAC/C,MAAI,CAAC,QAAQ,IAAI;AACb,UAAM,IAAI,MAAM,+CAA+C;AACnE,MAAI,CAAC,QAAQ,IAAI;AACb,UAAM,IAAI,MAAM,kDAAkD;AACtE,QAAM,uBAAuB,OAAO,KAAK,GAAG,QAAQ,IAAI,0BAA0B,QAAQ,IAAI,2BAA2B,EAAE,SAAS,QAAQ;AAC5I,QAAM,WAAW,UAAM,kBAAAA,SAAM,8BAA8B;AAAA,IACvD,QAAQ;AAAA,IACR,SAAS;AAAA,MACL,gBAAgB;AAAA,MAChB,eAAe,SAAS;AAAA,IAC5B;AAAA,IACA,MAAM;AAAA,EACV,CAAC;AACD,SAAO;AACX;AACA,IAAO,kCAAQ;",
  "names": ["fetch"]
}
