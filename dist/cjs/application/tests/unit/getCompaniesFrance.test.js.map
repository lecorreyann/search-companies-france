{
  "version": 3,
  "sources": ["../../../../esm/application/tests/unit/getCompaniesFrance.test.js"],
  "sourcesContent": ["import getCompaniesFrance from \"../../../application/getCompaniesFrance.js\";\nimport ErrorTexts from \"../../../application/ErrorTexts.js\";\ndescribe(\"getCompaniesFrance\", () => {\n    it(\"reject when siret 53805889200013\", async () => {\n        await expect(getCompaniesFrance(\"53805889200013\")).rejects.toThrow(new Error(ErrorTexts.NO_COMPANY_FOUND));\n    });\n    it(\"reject when siret 53805889200018\", async () => {\n        await expect(getCompaniesFrance(\"53805889200018\")).rejects.toThrow(new Error(ErrorTexts.NO_COMPANY_FOUND));\n    });\n    it(\"results.length > 0 when query is Planete\", async () => {\n        const result = await getCompaniesFrance(\"Planete\");\n        expect(result.length).toBeGreaterThan(0);\n    });\n    it(\"results[0] has code, name and address when query is Planete\", async () => {\n        const result = await getCompaniesFrance(\"Planete\");\n        expect(result[0]).toHaveProperty(\"code\");\n        expect(result[0]).toHaveProperty(\"name\");\n        expect(result[0]).toHaveProperty(\"address\");\n    });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,gCAA+B;AAC/B,wBAAuB;AACvB,SAAS,sBAAsB,MAAM;AACjC,KAAG,oCAAoC,YAAY;AAC/C,UAAM,WAAO,0BAAAA,SAAmB,gBAAgB,CAAC,EAAE,QAAQ,QAAQ,IAAI,MAAM,kBAAAC,QAAW,gBAAgB,CAAC;AAAA,EAC7G,CAAC;AACD,KAAG,oCAAoC,YAAY;AAC/C,UAAM,WAAO,0BAAAD,SAAmB,gBAAgB,CAAC,EAAE,QAAQ,QAAQ,IAAI,MAAM,kBAAAC,QAAW,gBAAgB,CAAC;AAAA,EAC7G,CAAC;AACD,KAAG,4CAA4C,YAAY;AACvD,UAAM,SAAS,UAAM,0BAAAD,SAAmB,SAAS;AACjD,WAAO,OAAO,MAAM,EAAE,gBAAgB,CAAC;AAAA,EAC3C,CAAC;AACD,KAAG,+DAA+D,YAAY;AAC1E,UAAM,SAAS,UAAM,0BAAAA,SAAmB,SAAS;AACjD,WAAO,OAAO,EAAE,EAAE,eAAe,MAAM;AACvC,WAAO,OAAO,EAAE,EAAE,eAAe,MAAM;AACvC,WAAO,OAAO,EAAE,EAAE,eAAe,SAAS;AAAA,EAC9C,CAAC;AACL,CAAC;",
  "names": ["getCompaniesFrance", "ErrorTexts"]
}
