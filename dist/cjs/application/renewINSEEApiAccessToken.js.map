{
  "version": 3,
  "sources": ["../../esm/application/renewINSEEApiAccessToken.js"],
  "sourcesContent": ["import getNewTokenFromINSEEApi from \"../infrastructure/getNewTokenFromINSEEApi.js\";\nimport fs from \"fs\";\nimport createConfig from \"./createConfig.js\";\nexport default async function renewINSEEApiAccessToken() {\n    const response = await getNewTokenFromINSEEApi();\n    const data = (await response.json());\n    const accessToken = data.access_token;\n    const pathConfig = `${process.cwd()}/config.json`;\n    // check if config.json exists\n    if (!fs.existsSync(pathConfig)) {\n        createConfig(\"config.json\", { INSEE_API_KEY: accessToken });\n    }\n    else {\n        const config = JSON.parse(fs.readFileSync(pathConfig, \"utf8\"));\n        config.INSEE_API_KEY = accessToken;\n        fs.writeFileSync(pathConfig, JSON.stringify(config));\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAoC;AACpC,gBAAe;AACf,0BAAyB;AACzB,eAAO,2BAAkD;AACrD,QAAM,WAAW,UAAM,+BAAAA,SAAwB;AAC/C,QAAM,OAAQ,MAAM,SAAS,KAAK;AAClC,QAAM,cAAc,KAAK;AACzB,QAAM,aAAa,GAAG,QAAQ,IAAI;AAElC,MAAI,CAAC,UAAAC,QAAG,WAAW,UAAU,GAAG;AAC5B,4BAAAC,SAAa,eAAe,EAAE,eAAe,YAAY,CAAC;AAAA,EAC9D,OACK;AACD,UAAM,SAAS,KAAK,MAAM,UAAAD,QAAG,aAAa,YAAY,MAAM,CAAC;AAC7D,WAAO,gBAAgB;AACvB,cAAAA,QAAG,cAAc,YAAY,KAAK,UAAU,MAAM,CAAC;AAAA,EACvD;AACJ;",
  "names": ["getNewTokenFromINSEEApi", "fs", "createConfig"]
}
