{
  "version": 3,
  "sources": ["../../esm/application/renewINSEEApiAccessToken.js"],
  "sourcesContent": ["import getNewTokenFromINSEEApi from \"../infrastructure/getNewTokenFromINSEEApi.js\";\nimport fs from \"fs\";\nexport const renewINSEEApiAccessToken = async () => {\n    const response = await getNewTokenFromINSEEApi();\n    const data = (await response.json());\n    const accessToken = data.access_token;\n    const pathConfig = `${process.cwd()}/config.json`;\n    // check if config.json exists\n    if (!fs.existsSync(pathConfig)) {\n        const config = {\n            INSEE_API_KEY: accessToken,\n        };\n        fs.writeFileSync(pathConfig, JSON.stringify(config));\n    }\n    else {\n        const config = JSON.parse(fs.readFileSync(pathConfig, \"utf8\"));\n        config.INSEE_API_KEY = accessToken;\n        fs.writeFileSync(pathConfig, JSON.stringify(config));\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAoC;AACpC,gBAAe;AACR,MAAM,2BAA2B,YAAY;AAChD,QAAM,WAAW,UAAM,+BAAAA,SAAwB;AAC/C,QAAM,OAAQ,MAAM,SAAS,KAAK;AAClC,QAAM,cAAc,KAAK;AACzB,QAAM,aAAa,GAAG,QAAQ,IAAI;AAElC,MAAI,CAAC,UAAAC,QAAG,WAAW,UAAU,GAAG;AAC5B,UAAM,SAAS;AAAA,MACX,eAAe;AAAA,IACnB;AACA,cAAAA,QAAG,cAAc,YAAY,KAAK,UAAU,MAAM,CAAC;AAAA,EACvD,OACK;AACD,UAAM,SAAS,KAAK,MAAM,UAAAA,QAAG,aAAa,YAAY,MAAM,CAAC;AAC7D,WAAO,gBAAgB;AACvB,cAAAA,QAAG,cAAc,YAAY,KAAK,UAAU,MAAM,CAAC;AAAA,EACvD;AACJ;",
  "names": ["getNewTokenFromINSEEApi", "fs"]
}
