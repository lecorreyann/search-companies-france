{
  "version": 3,
  "sources": ["../../esm/application/getCompaniesFrance.js"],
  "sourcesContent": ["import { getCompaniesFranceFromINSEEApi } from \"../infrastructure/getCompaniesFranceFromINSEEApi.js\";\nimport { getINSEEApiAccessToken } from \"../application/getINSEEApiAccessToken.js\";\nimport getQuery from \"./getQuery.js\";\nimport { renewINSEEApiAccessToken } from \"../application/renewINSEEApiAccessToken.js\";\nimport ErrorTexts from \"../application/ErrorTexts.js\";\nexport default async function getCompaniesFrance(query) {\n    const INSEE_API_KEY = await getINSEEApiAccessToken();\n    const buildQuery = getQuery(query);\n    let response = await getCompaniesFranceFromINSEEApi(buildQuery, INSEE_API_KEY);\n    if (response.status === 401) {\n        await renewINSEEApiAccessToken();\n        const INSEE_API_KEY = await getINSEEApiAccessToken();\n        response = await getCompaniesFranceFromINSEEApi(buildQuery, INSEE_API_KEY);\n    }\n    if (response.status === 404) {\n        throw new Error(ErrorTexts.NO_COMPANY_FOUND);\n    }\n    const data = (await response.json());\n    const companies = data.etablissements.map((company) => {\n        return {\n            code: company.siret,\n            name: company.uniteLegale.denominationUniteLegale,\n            address: `${company.adresseEtablissement.numeroVoieEtablissement} ${company.adresseEtablissement.typeVoieEtablissement} ${company.adresseEtablissement.libelleVoieEtablissement}, ${company.adresseEtablissement.codePostalEtablissement} ${company.adresseEtablissement.libelleCommuneEtablissement}`,\n        };\n    });\n    return companies;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAA+C;AAC/C,oCAAuC;AACvC,sBAAqB;AACrB,sCAAyC;AACzC,wBAAuB;AACvB,eAAO,mBAA0C,OAAO;AACpD,QAAM,gBAAgB,UAAM,sDAAuB;AACnD,QAAM,iBAAa,gBAAAA,SAAS,KAAK;AACjC,MAAI,WAAW,UAAM,sEAA+B,YAAY,aAAa;AAC7E,MAAI,SAAS,WAAW,KAAK;AACzB,cAAM,0DAAyB;AAC/B,UAAMC,iBAAgB,UAAM,sDAAuB;AACnD,eAAW,UAAM,sEAA+B,YAAYA,cAAa;AAAA,EAC7E;AACA,MAAI,SAAS,WAAW,KAAK;AACzB,UAAM,IAAI,MAAM,kBAAAC,QAAW,gBAAgB;AAAA,EAC/C;AACA,QAAM,OAAQ,MAAM,SAAS,KAAK;AAClC,QAAM,YAAY,KAAK,eAAe,IAAI,CAAC,YAAY;AACnD,WAAO;AAAA,MACH,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ,YAAY;AAAA,MAC1B,SAAS,GAAG,QAAQ,qBAAqB,2BAA2B,QAAQ,qBAAqB,yBAAyB,QAAQ,qBAAqB,6BAA6B,QAAQ,qBAAqB,2BAA2B,QAAQ,qBAAqB;AAAA,IAC7Q;AAAA,EACJ,CAAC;AACD,SAAO;AACX;",
  "names": ["getQuery", "INSEE_API_KEY", "ErrorTexts"]
}
