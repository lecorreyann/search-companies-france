{
  "version": 3,
  "sources": ["../../esm/application/getCompaniesFrance.js"],
  "sourcesContent": ["import getCompaniesFranceFromINSEEApi from \"../infrastructure/getCompaniesFranceFromINSEEApi.js\";\nimport getINSEEApiAccessToken from \"../application/getINSEEApiAccessToken.js\";\nimport getQuery from \"./getQuery.js\";\nimport renewINSEEApiAccessToken from \"../application/renewINSEEApiAccessToken.js\";\nfunction addressFormatter(adresseEtablissement) {\n    let address = \"\";\n    if (adresseEtablissement.numeroVoieEtablissement) {\n        address += adresseEtablissement.numeroVoieEtablissement + \" \";\n    }\n    if (adresseEtablissement.typeVoieEtablissement) {\n        address += adresseEtablissement.typeVoieEtablissement + \" \";\n    }\n    if (adresseEtablissement.libelleVoieEtablissement) {\n        address += adresseEtablissement.libelleVoieEtablissement + \" \";\n    }\n    if (adresseEtablissement.codePostalEtablissement) {\n        address += adresseEtablissement.codePostalEtablissement + \" \";\n    }\n    if (adresseEtablissement.libelleCommuneEtablissement) {\n        address += adresseEtablissement.libelleCommuneEtablissement;\n    }\n    return address;\n}\nexport default async function getCompaniesFrance(query) {\n    let INSEE_API_KEY;\n    try {\n        INSEE_API_KEY = await getINSEEApiAccessToken();\n    }\n    catch (error) {\n        await renewINSEEApiAccessToken();\n        INSEE_API_KEY = await getINSEEApiAccessToken();\n    }\n    const buildQuery = getQuery(query);\n    let response = await getCompaniesFranceFromINSEEApi(buildQuery, INSEE_API_KEY);\n    if (response.status === 401) {\n        await renewINSEEApiAccessToken();\n        const INSEE_API_KEY = await getINSEEApiAccessToken();\n        response = await getCompaniesFranceFromINSEEApi(buildQuery, INSEE_API_KEY);\n    }\n    const data = (await response.json());\n    let companies = [];\n    if (response.status === 404) {\n        return companies;\n    }\n    companies = data.etablissements.map((company) => {\n        return {\n            code: company.siret,\n            name: company.uniteLegale.denominationUniteLegale,\n            address: addressFormatter(company.adresseEtablissement),\n        };\n    });\n    return companies;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAA2C;AAC3C,oCAAmC;AACnC,sBAAqB;AACrB,sCAAqC;AACrC,SAAS,iBAAiB,sBAAsB;AAC5C,MAAI,UAAU;AACd,MAAI,qBAAqB,yBAAyB;AAC9C,eAAW,qBAAqB,0BAA0B;AAAA,EAC9D;AACA,MAAI,qBAAqB,uBAAuB;AAC5C,eAAW,qBAAqB,wBAAwB;AAAA,EAC5D;AACA,MAAI,qBAAqB,0BAA0B;AAC/C,eAAW,qBAAqB,2BAA2B;AAAA,EAC/D;AACA,MAAI,qBAAqB,yBAAyB;AAC9C,eAAW,qBAAqB,0BAA0B;AAAA,EAC9D;AACA,MAAI,qBAAqB,6BAA6B;AAClD,eAAW,qBAAqB;AAAA,EACpC;AACA,SAAO;AACX;AACA,eAAO,mBAA0C,OAAO;AACpD,MAAI;AACJ,MAAI;AACA,oBAAgB,UAAM,8BAAAA,SAAuB;AAAA,EACjD,SACO,OAAP;AACI,cAAM,gCAAAC,SAAyB;AAC/B,oBAAgB,UAAM,8BAAAD,SAAuB;AAAA,EACjD;AACA,QAAM,iBAAa,gBAAAE,SAAS,KAAK;AACjC,MAAI,WAAW,UAAM,sCAAAC,SAA+B,YAAY,aAAa;AAC7E,MAAI,SAAS,WAAW,KAAK;AACzB,cAAM,gCAAAF,SAAyB;AAC/B,UAAMG,iBAAgB,UAAM,8BAAAJ,SAAuB;AACnD,eAAW,UAAM,sCAAAG,SAA+B,YAAYC,cAAa;AAAA,EAC7E;AACA,QAAM,OAAQ,MAAM,SAAS,KAAK;AAClC,MAAI,YAAY,CAAC;AACjB,MAAI,SAAS,WAAW,KAAK;AACzB,WAAO;AAAA,EACX;AACA,cAAY,KAAK,eAAe,IAAI,CAAC,YAAY;AAC7C,WAAO;AAAA,MACH,MAAM,QAAQ;AAAA,MACd,MAAM,QAAQ,YAAY;AAAA,MAC1B,SAAS,iBAAiB,QAAQ,oBAAoB;AAAA,IAC1D;AAAA,EACJ,CAAC;AACD,SAAO;AACX;",
  "names": ["getINSEEApiAccessToken", "renewINSEEApiAccessToken", "getQuery", "getCompaniesFranceFromINSEEApi", "INSEE_API_KEY"]
}
